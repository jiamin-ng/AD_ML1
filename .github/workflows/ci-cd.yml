name: YOLO Flask API CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  # Static Application Security Testing (SAST)
  security_scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
            python-version: '3.9'

      - name: Install Bandit (SAST)
        run: pip install bandit

      - name: Run Bandit Security Scan & Save Report
        run: bandit -r app/ -f json -o bandit-report.json || true
  
      - name: Upload SAST Report as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: SAST-Bandit-Report
          path: bandit-report.json


  # Build and Push Docker Image to GitHub Container Registry
  build_and_push:
    needs: security_scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to DigitalOcean Container Registry
        run: echo "${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}" | docker login registry.digitalocean.com -u do --password-stdin

      - name: Build Docker Image
        run: docker build -t registry.digitalocean.com/ml-cnn/yolo-flask-api:latest .

      - name: Push Image to DigitalOcean Container Registry
        run: docker push registry.digitalocean.com/ml-cnn/yolo-flask-api:latest

  # Deploy to DigitalOcean
  deploy:
    needs: build_and_push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to DigitalOcean Droplet
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DO_DROPLET_IP }}
          username: ${{ secrets.DO_USER }}
          key: ${{ secrets.DO_SSH_KEY }}
          script: |
            docker login registry.digitalocean.com -u do --password=${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
            docker pull registry.digitalocean.com/ml-cnn/yolo-flask-api:latest
            docker stop yolo-api || true
            docker rm yolo-api || true
            docker run -d -p 5000:5000 --name yolo-api --restart unless-stopped \
            registry.digitalocean.com/ml-cnn/yolo-flask-api:latest

  # Dynamic Application Security Testing (DAST)
  dast_scan:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Run OWASP ZAP DAST Scan
        uses: zaproxy/action-baseline@v0.8.0
        with:
          target: "http://${{ secrets.DO_DROPLET_IP }}:5000"
          docker_name: "ghcr.io/zaproxy/zaproxy"
          cmd_options: "-J zap-report.json"

      - name: Upload DAST Report as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: DAST-ZAP-Report
          path: zap-report.json
